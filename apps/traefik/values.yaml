traefik:
  deployment:
    enabled: true
    kind: Deployment
    replicas: 1
    initContainers:
      - name: volume-permissions
        image: busybox:1.36
        command:
          [
            "sh",
            "-c",
            "touch /data/acme.json; chmod -v 600 /data/acme.json; adduser -S 65532 65532; chown -R 65532:65532 /data/acme.json",
          ]
        securityContext:
          runAsNonRoot: true
          runAsGroup: 65532
        volumeMounts:
          - name: data
            mountPath: /data

  certificatesResolvers:
    letsencrypt:
      acme:
        email: injuninjune@gmail.com
        httpChallenge:
          entryPoint: web
        storage: /data/acme.json

  ports:
    web:
      port: 8000
      expose:
        default: true
        internal: false
      exposedPort: 80
      protocol: TCP
    websecure:
      port: 8443
      expose:
        default: true
        internal: false
      exposedPort: 443
      protocol: TCP
      tls:
        enabled: true
        certResolver: "letsencrypt"
    intweb:
      port: 8001
      expose:
        default: false
        internal: true
      exposedPort: 80
      protocol: TCP
    intwebsec:
      port: 8444
      expose:
        default: false
        internal: true
      exposedPort: 443
      protocol: TCP
      tls:
        enabled: true
        certResolver: "letsencrypt"

  ingressRoute:
    dashboard:
      enabled: true
      annotations: {}
      labels: {}
      matchRule: Host(`traefik.injunweb`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
      services:
        - name: api@internal
          kind: TraefikService
      entryPoints: ["intweb", "intwebsec"]

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 128Mi
    storageClass: longhorn

  service:
    enabled: true
    single: true
    type: LoadBalancer
    loadBalancerIP: "192.168.0.200"
    additionalServices:
      internal:
        type: LoadBalancer
        loadBalancerIP: "192.168.0.201"
        labels:
          traefik-service-type: internal

  podSecurityContext:
    fsGroup: 65532
    fsGroupChangePolicy: "OnRootMismatch"
    runAsGroup: 65532
    runAsNonRoot: true
    runAsUser: 65532

  providers:
    kubernetesCRD:
      enabled: true
      allowCrossNamespace: true
    kubernetesIngress:
      enabled: true
      allowExternalNameServices: true

  additionalArguments:
    - "--log.level=INFO"
    - "--api.dashboard=true"

  rbac:
    enabled: true
